import 'dart:io';
import 'dart:math';

const int U = 0, R = 1, D = 2, L = 3;

int r1=0, r2=0, c1=0, c2=0;
var arr = List.generate(50, (i) => List.generate(50, (i) => 0));
int goalCnt = 0, cnt = 0, r = 0, c = 0, num = 1, len = 5, dir = U;

void main()
{
    var _ip = stdin.readLineSync()!.split(' ').map((o) => int.parse(o)).toList();
    r1 = _ip[0]; c1 = _ip[1]; r2 = _ip[2]; c2 = _ip[3];
    goalCnt = (r2-r1+1) * (c2-c1+1);

    while(goalCnt > 0) {
        // arr 범위 내
        if(r >= r1 && r <= r2 && c >= c1 && c <= c2) {
            arr[r + r1 * -1][c + c1 * -1] = num;
            goalCnt--;
        }
        if(goalCnt == 0) break;

        FindNextPos();
    }

    Print();
}

void FindNextPos() {
    if(num <= 9) {
        if(num == 1 || num == 7 || num == 8 || num == 9) {
            RIGHT();
        }
        else if(num == 2) {
            UP();
        }
        else if(num == 3 || num == 4) {
            LEFT();
        }
        else if(num == 5 || num == 6) {
            DOWN();
        }
    }
    else {
        cnt++;

        if(dir == U) {
            UP();
            if(cnt == len-2) {dir = L; cnt = 0;}
        }
        else if(dir == D) {
            DOWN();
            if(cnt == len-1) {dir = R; cnt = 0;}
        }
        else if(dir == L) {
            LEFT();
            if(cnt == len-1) {dir = D; cnt = 0;}
        }
        else if(dir == R) {
            RIGHT();
            if(cnt == len) { cnt = 0; len += 2; dir = U; }
        }
    }

    num++;
}

void UP() {r--;}
void RIGHT() {c++;}
void DOWN() {r++;}
void LEFT() {c--;}

void Print() {
    int strLen = num.toString().length;
    var answer = "";
    
    for(int r = 0; r < r2-r1+1; r++) {
        for(int c = 0; c <c2-c1+1; c++) {
            var s = arr[r][c].toString();
            s = s.padLeft(strLen, ' ');
            s += ' ';
            answer += s;
        }
        answer += '\n';
    }

    print(answer);
}