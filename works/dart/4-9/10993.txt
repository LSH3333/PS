import 'dart:io';

int N = 0;
var arr = List.generate(1200, (index) => List.generate(2400, (index) => ' '));
var length = List.generate(11, (index) => List.generate(2, (index) => 0));

void main()
{
    N = int.parse(stdin.readLineSync()!);

    MakeLength();

    if(N % 2 == 0) {
        MakeTriangles(N, length[N][0]-1, length[N][1] ~/ 2);
    }
    else {
        MakeTriangles(N, 0, length[N][1] ~/ 2);
    }

    Print();
}

void MakeLength() {
    for(int i = 1; i <= 10; i++) {
        length[i][0] = length[i-1][0] * 2 + 1;
        length[i][1] = length[i][0] * 2 - 1;
    }
}

void MakeTriangles(int n, int _r, int _c) {
    if(n == 0) return;

    int rLen = length[n][0];

    // 역삼각형
    if(n % 2 == 0) {
        DrawTriangle(n, _r, _c, false);
        MakeTriangles(n-1, _r - rLen + 2, _c);
    }
    // 삼각형
    else {
        DrawTriangle(n, _r, _c, true);
        MakeTriangles(n-1, _r + rLen - 2, _c);
    }
}

void DrawTriangle(int n, int _r, int _c, bool tri) {
    int rLen = length[n][0], cLen = length[n][1];

    // 삼각형
    if(tri) {
        int r = _r, lc = _c, rc = _c;
        int cnt = 0;
        while(cnt++ < rLen) {
            arr[r][lc] = '*';
            arr[r][rc] = '*';
            r++;
            lc--; rc++;
        }

        r = _r + rLen - 1;
        int c = _c - cLen ~/ 2;
        cnt = 0;
        while(cnt < cLen) {
            arr[r][c++] = '*';
            cnt++;
        }
    }
    // 역삼각형
    else {
        int r = _r, lc = _c, rc = _c;
        int cnt = 0;
        while(cnt++ < rLen) {
            arr[r][lc] = '*';
            arr[r][rc] = '*';
            r--;
            lc--; rc++;
        }

        r = _r - rLen + 1;
        int c = _c - cLen ~/ 2;
        cnt = 0;
        while(cnt < cLen) {
            arr[r][c++] = '*';
            cnt++;
        }
    }
}

void Print() {
    int rLen = length[N][0], cLen = length[N][1];


    if(N % 2 == 0) {
        for(int i = 0; i < rLen; i++) {
            var ans = "";
            for(int j = 0; j < cLen-i; j++) {
                ans += arr[i][j];
            }
            print(ans);
        }
    }
    else {
        for(int i = 0; i < rLen; i++) {
            var ans = "";
            for(int j = 0; j <= cLen ~/ 2 + i; j++) {
                ans += arr[i][j];
            }
            print(ans);
        }
    }
}